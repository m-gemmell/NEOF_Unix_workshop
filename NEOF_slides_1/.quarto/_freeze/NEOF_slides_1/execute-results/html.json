{
  "hash": "311e7b0d385b4fc614316bef2456cffc",
  "result": {
    "markdown": "##  {background-color=\"black\" background-image=\"https://neof.org.uk/wp-content/uploads/2020/09/Tech_background-e1600357444630.jpg\"}\n\n[Introduction to command line bioinformatics]{.title-slide-text}\n\n<center>![](./figures/linux_beginner.png){width=\"40%\"}</center>\n\n## \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](https://neof.org.uk/wp-content/uploads/2020/09/Tech_background-e1600357444630.jpg){fig-align='center' width=95% height=80px}\n:::\n:::\n\n\n<img \n  src=\"https://neof.org.uk/wp-content/uploads/2020/09/Tech_background-e1600357444630.jpg\" \n  style=\"width:95%;height:80px; object-fit: cover;\"\n/>\n\n[Upcoming workshops]{.slide-title}\n\n<hr>\n\n<https://neof.org.uk/training/>\n\n::: columns\n::: {.column width=\"60%\"}\n-   Introduction to sequencing QC\n\n    -   7th & 9th November 2023\n\n    -   Register by 23 Oct 2023\n\n-   R Primer for omics\n\n    -   21st & 23rd November 2023\n\n-   Python for bioinformatics\n\n    -   12th & 14th December 2023\n\n-   More!\n:::\n\n::: {.column width=\"40%\"}\n<center>![](./figures/workshop.png){width=\"100%\"}</center>\n:::\n:::\n\n## \n\n[Format & Schedule]{.slide-title}\n\n::: columns\n::: {.column width=\"35%\"}\nThis intro\n\nBookdown\n\nTheory\n\nPractice\n\nMCQs\n\nExercises\n\nOptional materials\n:::\n\n::: {.column width=\"35%\"}\nWork at your own pace\n\nWe are here to help\n\nTime with breaks in between\n\n-   10:00-11:20\n\n-   11:30-12:30\n\n-   13:30-14:50\n\n-   15:00-16:00\n:::\n\n::: {.column width=\"30%\"}\n<center>![](./figures/clock_antique.png){width=\"100%\"}</center>\n:::\n:::\n\n## Plan\n\n::: columns\n::: {.column width=\"60%\"}\nLinux, command line, and VNC\n\nFiles and Directories\n\nTips and tricks\n\nDirectory manipulation\n\nFile manipulation\n\nfastq file format\n\nAdvanced Linux\n\nOther bioinformatic languages\n:::\n\n::: {.column width=\"40%\"}\n<center>![](./figures/map.png){width=\"100%\"}</center>\n:::\n:::\n\n## Linux\n\n::: columns\n::: {.column width=\"60%\"}\nOperating system\n\nFree\n\nOpen source\n\nMultitasking\n\nMultiuser\n\nBioinformatic programmes\n\nRelatively easy to run and develop software\n:::\n\n::: {.column width=\"40%\"}\n<center>![](./figures/linux_beginner.png){width=\"100%\"}</center>\n:::\n:::\n\n## Applications\n\n::: columns\n::: {.column width=\"60%\"}\nOur Future Workshops\n\nBioinformatics requires:\n\n-   Storage\n\n-   RAM\n\n-   Cores\n\nNot available on laptops/desktops\n\nHPCs which utilise unix\n\n\\>99% of bfx programs work in unix\n:::\n\n::: {.column width=\"40%\"}\n<center>![](./figures/computer_group.png){width=\"100%\"}</center>\n:::\n:::\n\n## User to kernel\n\n<center>![](./figures/linux_user_to_kernel.png){width=\"90%\"}</center>\n\n## VNC: Virtual Network Computing\n\n<center>![](./figures/logon_pic.png){width=\"90%\"}</center>\n\n## Terminal window\n\n::: columns\n::: {.column width=\"40%\"}\nLogin name\n\nMachine name\n\nCurrent directory path\n\nCommand line\n:::\n\n::: {.column width=\"60%\"}\n<center>![](./figures/webvnc_terminal.png){width=\"100%\"}</center>\n:::\n:::\n\n## Directories and files\n\n::: columns\n::: {.column width=\"35%\"}\ncd\n\npwd\n\ncp\n\nDirectory structure\n\nPaths\n\nls\n:::\n\n::: {.column width=\"20%\"}\n<center>![](./figures/directory.png){width=\"100%\"}</center>\n\n<center>![](./figures/paths.png){width=\"100%\"}</center>\n:::\n\n::: {.column width=\"45%\"}\n<center>![](./figures/linux_tree_structure.png){width=\"100%\"}</center>\n\n<center>![](./figures/List.png){width=\"50%\"}</center>\n:::\n:::\n\n## Directories/folders and files\n\n::: columns\n::: {.column width=\"60%\"}\n-   File storage Building\n\n    -   **/** (aka root)\n\n    -   Note: Every other **/** is a divider\n\n-   Rooms\n\n    -   **/room_a**\n\n    -   **/room_b**\n\n    -   **/room_c,** etc.\n:::\n\n::: {.column width=\"40%\"}\n<center>![](./figures/rooms.png){width=\"100%\"}</center>\n:::\n:::\n",
    "supporting": [
      "NEOF_slides_1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}